
ExtruderControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000074c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  0000074c  000007e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080008a  0080008a  0000080a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000080a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000083c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b48  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003b0  00000000  00000000  000024f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cb8  00000000  00000000  000028a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  00003558  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000373  00000000  00000000  00003820  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b43  00000000  00000000  00003b93  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  000046d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 38       	cpi	r26, 0x8A	; 138
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e8       	ldi	r26, 0x8A	; 138
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 38       	cpi	r26, 0x8C	; 140
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 94 02 	call	0x528	; 0x528 <main>
  8a:	0c 94 a4 03 	jmp	0x748	; 0x748 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd4_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd4_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	8a e0       	ldi	r24, 0x0A	; 10
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd4_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	8a e0       	ldi	r24, 0x0A	; 10
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd4_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	8b e0       	ldi	r24, 0x0B	; 11
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd4_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	8b e0       	ldi	r24, 0x0B	; 11
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd4_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	8c e0       	ldi	r24, 0x0C	; 12
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd4_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	8c e0       	ldi	r24, 0x0C	; 12
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd4_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	8d e0       	ldi	r24, 0x0D	; 13
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd4_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	8d e0       	ldi	r24, 0x0D	; 13
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <Lcd4_Cmd>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	8e e0       	ldi	r24, 0x0E	; 14
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	8f e0       	ldi	r24, 0x0F	; 15
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3b4:	8f e9       	ldi	r24, 0x9F	; 159
 3b6:	9f e0       	ldi	r25, 0x0F	; 15
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <Lcd4_Cmd+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <Lcd4_Cmd+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	8f e0       	ldi	r24, 0x0F	; 15
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3cc:	8f e9       	ldi	r24, 0x9F	; 159
 3ce:	9f e0       	ldi	r25, 0x0F	; 15
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <Lcd4_Cmd+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Lcd4_Cmd+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <Lcd4_Set_Cursor>:
 3dc:	cf 93       	push	r28
 3de:	c6 2f       	mov	r28, r22
 3e0:	81 30       	cpi	r24, 0x01	; 1
 3e2:	59 f4       	brne	.+22     	; 0x3fa <Lcd4_Set_Cursor+0x1e>
 3e4:	80 e8       	ldi	r24, 0x80	; 128
 3e6:	86 0f       	add	r24, r22
 3e8:	82 95       	swap	r24
 3ea:	8f 70       	andi	r24, 0x0F	; 15
 3ec:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f0:	8c 2f       	mov	r24, r28
 3f2:	8f 70       	andi	r24, 0x0F	; 15
 3f4:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3f8:	0c c0       	rjmp	.+24     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
 3fa:	82 30       	cpi	r24, 0x02	; 2
 3fc:	51 f4       	brne	.+20     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
 3fe:	80 ec       	ldi	r24, 0xC0	; 192
 400:	86 0f       	add	r24, r22
 402:	82 95       	swap	r24
 404:	8f 70       	andi	r24, 0x0F	; 15
 406:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 40a:	8c 2f       	mov	r24, r28
 40c:	8f 70       	andi	r24, 0x0F	; 15
 40e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 412:	cf 91       	pop	r28
 414:	08 95       	ret

00000416 <Lcd4_Init>:
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 41c:	2f ef       	ldi	r18, 0xFF	; 255
 41e:	89 ef       	ldi	r24, 0xF9	; 249
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	21 50       	subi	r18, 0x01	; 1
 424:	80 40       	sbci	r24, 0x00	; 0
 426:	90 40       	sbci	r25, 0x00	; 0
 428:	e1 f7       	brne	.-8      	; 0x422 <Lcd4_Init+0xc>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <Lcd4_Init+0x16>
 42c:	00 00       	nop
 42e:	83 e0       	ldi	r24, 0x03	; 3
 430:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 434:	8f e1       	ldi	r24, 0x1F	; 31
 436:	9e e4       	ldi	r25, 0x4E	; 78
 438:	01 97       	sbiw	r24, 0x01	; 1
 43a:	f1 f7       	brne	.-4      	; 0x438 <Lcd4_Init+0x22>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <Lcd4_Init+0x28>
 43e:	00 00       	nop
 440:	83 e0       	ldi	r24, 0x03	; 3
 442:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 446:	8f ed       	ldi	r24, 0xDF	; 223
 448:	9b ea       	ldi	r25, 0xAB	; 171
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	f1 f7       	brne	.-4      	; 0x44a <Lcd4_Init+0x34>
 44e:	00 c0       	rjmp	.+0      	; 0x450 <Lcd4_Init+0x3a>
 450:	00 00       	nop
 452:	83 e0       	ldi	r24, 0x03	; 3
 454:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 45e:	82 e0       	ldi	r24, 0x02	; 2
 460:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 464:	88 e0       	ldi	r24, 0x08	; 8
 466:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 470:	8c e0       	ldi	r24, 0x0C	; 12
 472:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 47c:	86 e0       	ldi	r24, 0x06	; 6
 47e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 482:	08 95       	ret

00000484 <Lcd4_Write_Char>:
 484:	cf 93       	push	r28
 486:	c8 2f       	mov	r28, r24
 488:	61 e0       	ldi	r22, 0x01	; 1
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	8e e0       	ldi	r24, 0x0E	; 14
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 494:	8c 2f       	mov	r24, r28
 496:	82 95       	swap	r24
 498:	8f 70       	andi	r24, 0x0F	; 15
 49a:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 49e:	61 e0       	ldi	r22, 0x01	; 1
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	8f e0       	ldi	r24, 0x0F	; 15
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4aa:	8f e9       	ldi	r24, 0x9F	; 159
 4ac:	9f e0       	ldi	r25, 0x0F	; 15
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <Lcd4_Write_Char+0x2a>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <Lcd4_Write_Char+0x30>
 4b4:	00 00       	nop
 4b6:	60 e0       	ldi	r22, 0x00	; 0
 4b8:	70 e0       	ldi	r23, 0x00	; 0
 4ba:	8f e0       	ldi	r24, 0x0F	; 15
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4c2:	8f e9       	ldi	r24, 0x9F	; 159
 4c4:	9f e0       	ldi	r25, 0x0F	; 15
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <Lcd4_Write_Char+0x42>
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <Lcd4_Write_Char+0x48>
 4cc:	00 00       	nop
 4ce:	8c 2f       	mov	r24, r28
 4d0:	8f 70       	andi	r24, 0x0F	; 15
 4d2:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4d6:	61 e0       	ldi	r22, 0x01	; 1
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	8f e0       	ldi	r24, 0x0F	; 15
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4e2:	8f e9       	ldi	r24, 0x9F	; 159
 4e4:	9f e0       	ldi	r25, 0x0F	; 15
 4e6:	01 97       	sbiw	r24, 0x01	; 1
 4e8:	f1 f7       	brne	.-4      	; 0x4e6 <Lcd4_Write_Char+0x62>
 4ea:	00 c0       	rjmp	.+0      	; 0x4ec <Lcd4_Write_Char+0x68>
 4ec:	00 00       	nop
 4ee:	60 e0       	ldi	r22, 0x00	; 0
 4f0:	70 e0       	ldi	r23, 0x00	; 0
 4f2:	8f e0       	ldi	r24, 0x0F	; 15
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4fa:	8f e9       	ldi	r24, 0x9F	; 159
 4fc:	9f e0       	ldi	r25, 0x0F	; 15
 4fe:	01 97       	sbiw	r24, 0x01	; 1
 500:	f1 f7       	brne	.-4      	; 0x4fe <Lcd4_Write_Char+0x7a>
 502:	00 c0       	rjmp	.+0      	; 0x504 <Lcd4_Write_Char+0x80>
 504:	00 00       	nop
 506:	cf 91       	pop	r28
 508:	08 95       	ret

0000050a <Lcd4_Write_String>:
 50a:	cf 93       	push	r28
 50c:	df 93       	push	r29
 50e:	ec 01       	movw	r28, r24
 510:	88 81       	ld	r24, Y
 512:	88 23       	and	r24, r24
 514:	31 f0       	breq	.+12     	; 0x522 <Lcd4_Write_String+0x18>
 516:	21 96       	adiw	r28, 0x01	; 1
 518:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Write_Char>
 51c:	89 91       	ld	r24, Y+
 51e:	81 11       	cpse	r24, r1
 520:	fb cf       	rjmp	.-10     	; 0x518 <Lcd4_Write_String+0xe>
 522:	df 91       	pop	r29
 524:	cf 91       	pop	r28
 526:	08 95       	ret

00000528 <main>:
#define D7 eS_PORTB3
#define RS eS_PORTB4
#define EN eS_PORTB5
int main(void)
{
	DDRC = 0xFF;
 528:	8f ef       	ldi	r24, 0xFF	; 255
 52a:	84 bb       	out	0x14, r24	; 20
	DDRB = 0xFF;
 52c:	87 bb       	out	0x17, r24	; 23
	StepperInit(16,1000);
 52e:	68 ee       	ldi	r22, 0xE8	; 232
 530:	73 e0       	ldi	r23, 0x03	; 3
 532:	80 e1       	ldi	r24, 0x10	; 16
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 0d 03 	call	0x61a	; 0x61a <StepperInit>
	Lcd4_Init();
 53a:	0e 94 0b 02 	call	0x416	; 0x416 <Lcd4_Init>
	
    while (1) 
    {
		Lcd4_Set_Cursor(1,1);
 53e:	61 e0       	ldi	r22, 0x01	; 1
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Set_Cursor>
		Lcd4_Write_String("the stepper is rotate with speed 1000 rpm") ;
 546:	80 e6       	ldi	r24, 0x60	; 96
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 94 85 02 	call	0x50a	; 0x50a <Lcd4_Write_String>
		Stepper_A_rev(cw,50);
 54e:	62 e3       	ldi	r22, 0x32	; 50
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	81 e0       	ldi	r24, 0x01	; 1
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 4d 03 	call	0x69a	; 0x69a <Stepper_A_rev>
    }
 55a:	f1 cf       	rjmp	.-30     	; 0x53e <main+0x16>

0000055c <steper_1step>:
#include<util/delay.h>
#include <avr/io.h>
#include <stdbool.h>
int speed = 0;
void steper_1step(){ // to make a full 1 step with 2 phase
	pinChange(ms1,0);        // ms1 = 0,ms2 = 0,ms3 = 0 from a9488 data sheet
 55c:	60 e0       	ldi	r22, 0x00	; 0
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	84 e1       	ldi	r24, 0x14	; 20
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms2,0);
 568:	60 e0       	ldi	r22, 0x00	; 0
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	85 e1       	ldi	r24, 0x15	; 21
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms3,0);
 574:	60 e0       	ldi	r22, 0x00	; 0
 576:	70 e0       	ldi	r23, 0x00	; 0
 578:	86 e1       	ldi	r24, 0x16	; 22
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 580:	08 95       	ret

00000582 <steper_Hstep>:
}
void steper_Hstep(){// to make a half 1 step with 1-2 phase ms1 = 1,ms2 = 0,ms3 = 0 from a9488 data sheet
	pinChange(ms1,1);
 582:	61 e0       	ldi	r22, 0x01	; 1
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	84 e1       	ldi	r24, 0x14	; 20
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms2,0);
 58e:	60 e0       	ldi	r22, 0x00	; 0
 590:	70 e0       	ldi	r23, 0x00	; 0
 592:	85 e1       	ldi	r24, 0x15	; 21
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms3,0);
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	86 e1       	ldi	r24, 0x16	; 22
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5a6:	08 95       	ret

000005a8 <steper_Qstep>:
}
void steper_Qstep(){// to make a Quarter 1 step with w1-2 phase ms1 = 0,ms2 = 1,ms3 = 0 from a9488 data sheet
	pinChange(ms1,0);
 5a8:	60 e0       	ldi	r22, 0x00	; 0
 5aa:	70 e0       	ldi	r23, 0x00	; 0
 5ac:	84 e1       	ldi	r24, 0x14	; 20
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms2,1);
 5b4:	61 e0       	ldi	r22, 0x01	; 1
 5b6:	70 e0       	ldi	r23, 0x00	; 0
 5b8:	85 e1       	ldi	r24, 0x15	; 21
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms3,0);
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	70 e0       	ldi	r23, 0x00	; 0
 5c4:	86 e1       	ldi	r24, 0x16	; 22
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5cc:	08 95       	ret

000005ce <steper_Estep>:
}
void steper_Estep(){// to make a Eighth 1 step with 2w1-2 phase ms1 = 1,ms2 = 1,ms3 = 0 from a9488 data sheet
	pinChange(ms1,1);
 5ce:	61 e0       	ldi	r22, 0x01	; 1
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	84 e1       	ldi	r24, 0x14	; 20
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms2,1);
 5da:	61 e0       	ldi	r22, 0x01	; 1
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	85 e1       	ldi	r24, 0x15	; 21
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms3,0);
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	86 e1       	ldi	r24, 0x16	; 22
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 5f2:	08 95       	ret

000005f4 <steper_Sstep>:
}
void steper_Sstep(){// to make a Sixteenth 1 step with 4w1-2 phase ms1 = 1,ms2 = 1,ms3 = 0 from a9488 data sheet
	pinChange(ms1,1);
 5f4:	61 e0       	ldi	r22, 0x01	; 1
 5f6:	70 e0       	ldi	r23, 0x00	; 0
 5f8:	84 e1       	ldi	r24, 0x14	; 20
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms2,1);
 600:	61 e0       	ldi	r22, 0x01	; 1
 602:	70 e0       	ldi	r23, 0x00	; 0
 604:	85 e1       	ldi	r24, 0x15	; 21
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	pinChange(ms3,1);
 60c:	61 e0       	ldi	r22, 0x01	; 1
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	86 e1       	ldi	r24, 0x16	; 22
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 618:	08 95       	ret

0000061a <StepperInit>:
}
//library interface description
int StepperInit(int steps,uint8_t sp)  //types of steps (1,2,6,8,16),speed of rotation in rpm
{
 61a:	cf 93       	push	r28
 61c:	c6 2f       	mov	r28, r22
	switch (steps){
 61e:	86 30       	cpi	r24, 0x06	; 6
 620:	91 05       	cpc	r25, r1
 622:	99 f0       	breq	.+38     	; 0x64a <StepperInit+0x30>
 624:	34 f4       	brge	.+12     	; 0x632 <StepperInit+0x18>
 626:	81 30       	cpi	r24, 0x01	; 1
 628:	91 05       	cpc	r25, r1
 62a:	49 f0       	breq	.+18     	; 0x63e <StepperInit+0x24>
 62c:	02 97       	sbiw	r24, 0x02	; 2
 62e:	51 f0       	breq	.+20     	; 0x644 <StepperInit+0x2a>
 630:	14 c0       	rjmp	.+40     	; 0x65a <StepperInit+0x40>
 632:	88 30       	cpi	r24, 0x08	; 8
 634:	91 05       	cpc	r25, r1
 636:	61 f0       	breq	.+24     	; 0x650 <StepperInit+0x36>
 638:	40 97       	sbiw	r24, 0x10	; 16
 63a:	69 f0       	breq	.+26     	; 0x656 <StepperInit+0x3c>
 63c:	0e c0       	rjmp	.+28     	; 0x65a <StepperInit+0x40>
		case 1:steper_1step();break;
 63e:	0e 94 ae 02 	call	0x55c	; 0x55c <steper_1step>
 642:	0b c0       	rjmp	.+22     	; 0x65a <StepperInit+0x40>
		case 2:steper_Hstep();break;
 644:	0e 94 c1 02 	call	0x582	; 0x582 <steper_Hstep>
 648:	08 c0       	rjmp	.+16     	; 0x65a <StepperInit+0x40>
		case 6:steper_Qstep();break;
 64a:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <steper_Qstep>
 64e:	05 c0       	rjmp	.+10     	; 0x65a <StepperInit+0x40>
		case 8:steper_Estep();break;
 650:	0e 94 e7 02 	call	0x5ce	; 0x5ce <steper_Estep>
 654:	02 c0       	rjmp	.+4      	; 0x65a <StepperInit+0x40>
		case 16:steper_Sstep();break;
 656:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <steper_Sstep>
	}
	speed = sp;
 65a:	6c 2f       	mov	r22, r28
 65c:	70 e0       	ldi	r23, 0x00	; 0
 65e:	70 93 8b 00 	sts	0x008B, r23
 662:	60 93 8a 00 	sts	0x008A, r22
}
 666:	cf 91       	pop	r28
 668:	08 95       	ret

0000066a <setspeed>:
int setspeed(int sp){
	sp=(1/(sp/60))*1000;//1Hz = 60 rpm & t = 1/f &1s = 1000ms
 66a:	6c e3       	ldi	r22, 0x3C	; 60
 66c:	70 e0       	ldi	r23, 0x00	; 0
 66e:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__divmodhi4>
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__divmodhi4>
 67a:	28 ee       	ldi	r18, 0xE8	; 232
 67c:	33 e0       	ldi	r19, 0x03	; 3
 67e:	62 9f       	mul	r22, r18
 680:	c0 01       	movw	r24, r0
 682:	63 9f       	mul	r22, r19
 684:	90 0d       	add	r25, r0
 686:	72 9f       	mul	r23, r18
 688:	90 0d       	add	r25, r0
 68a:	11 24       	eor	r1, r1
	while(sp > 0){
 68c:	18 16       	cp	r1, r24
 68e:	19 06       	cpc	r1, r25
 690:	1c f4       	brge	.+6      	; 0x698 <setspeed+0x2e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 692:	00 00       	nop
		_delay_us(1);
		sp-=1;
 694:	01 97       	sbiw	r24, 0x01	; 1
	}
	speed = sp;
}
int setspeed(int sp){
	sp=(1/(sp/60))*1000;//1Hz = 60 rpm & t = 1/f &1s = 1000ms
	while(sp > 0){
 696:	e9 f7       	brne	.-6      	; 0x692 <setspeed+0x28>
		_delay_us(1);
		sp-=1;
	}
}
 698:	08 95       	ret

0000069a <Stepper_A_rev>:
void Stepper_A_rev(bool clockw,uint8_t NuOfSteps){//rotate clockwise or ccw , number of steps for stepperA
 69a:	cf 93       	push	r28
 69c:	c6 2f       	mov	r28, r22
	if (clockw)
 69e:	88 23       	and	r24, r24
 6a0:	39 f0       	breq	.+14     	; 0x6b0 <Stepper_A_rev+0x16>
	{
		pinChange(DIRA,1);
 6a2:	61 e0       	ldi	r22, 0x01	; 1
 6a4:	70 e0       	ldi	r23, 0x00	; 0
 6a6:	88 e1       	ldi	r24, 0x18	; 24
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 6ae:	06 c0       	rjmp	.+12     	; 0x6bc <Stepper_A_rev+0x22>
	}
	else
	{
		pinChange(DIRA,0);
 6b0:	60 e0       	ldi	r22, 0x00	; 0
 6b2:	70 e0       	ldi	r23, 0x00	; 0
 6b4:	88 e1       	ldi	r24, 0x18	; 24
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
	}
	
	while (NuOfSteps != 0)
 6bc:	cc 23       	and	r28, r28
 6be:	d1 f0       	breq	.+52     	; 0x6f4 <Stepper_A_rev+0x5a>
	{
		pinChange(StepA,1);
 6c0:	61 e0       	ldi	r22, 0x01	; 1
 6c2:	70 e0       	ldi	r23, 0x00	; 0
 6c4:	87 e1       	ldi	r24, 0x17	; 23
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
		setspeed(speed); 
 6cc:	80 91 8a 00 	lds	r24, 0x008A
 6d0:	90 91 8b 00 	lds	r25, 0x008B
 6d4:	0e 94 35 03 	call	0x66a	; 0x66a <setspeed>
		pinChange(StepA,0);
 6d8:	60 e0       	ldi	r22, 0x00	; 0
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	87 e1       	ldi	r24, 0x17	; 23
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
		setspeed(speed);
 6e4:	80 91 8a 00 	lds	r24, 0x008A
 6e8:	90 91 8b 00 	lds	r25, 0x008B
 6ec:	0e 94 35 03 	call	0x66a	; 0x66a <setspeed>
		NuOfSteps -= 1;
 6f0:	c1 50       	subi	r28, 0x01	; 1
	else
	{
		pinChange(DIRA,0);
	}
	
	while (NuOfSteps != 0)
 6f2:	31 f7       	brne	.-52     	; 0x6c0 <Stepper_A_rev+0x26>
		setspeed(speed); 
		pinChange(StepA,0);
		setspeed(speed);
		NuOfSteps -= 1;
	}
}
 6f4:	cf 91       	pop	r28
 6f6:	08 95       	ret

000006f8 <__divmodhi4>:
 6f8:	97 fb       	bst	r25, 7
 6fa:	07 2e       	mov	r0, r23
 6fc:	16 f4       	brtc	.+4      	; 0x702 <__divmodhi4+0xa>
 6fe:	00 94       	com	r0
 700:	07 d0       	rcall	.+14     	; 0x710 <__divmodhi4_neg1>
 702:	77 fd       	sbrc	r23, 7
 704:	09 d0       	rcall	.+18     	; 0x718 <__divmodhi4_neg2>
 706:	0e 94 90 03 	call	0x720	; 0x720 <__udivmodhi4>
 70a:	07 fc       	sbrc	r0, 7
 70c:	05 d0       	rcall	.+10     	; 0x718 <__divmodhi4_neg2>
 70e:	3e f4       	brtc	.+14     	; 0x71e <__divmodhi4_exit>

00000710 <__divmodhi4_neg1>:
 710:	90 95       	com	r25
 712:	81 95       	neg	r24
 714:	9f 4f       	sbci	r25, 0xFF	; 255
 716:	08 95       	ret

00000718 <__divmodhi4_neg2>:
 718:	70 95       	com	r23
 71a:	61 95       	neg	r22
 71c:	7f 4f       	sbci	r23, 0xFF	; 255

0000071e <__divmodhi4_exit>:
 71e:	08 95       	ret

00000720 <__udivmodhi4>:
 720:	aa 1b       	sub	r26, r26
 722:	bb 1b       	sub	r27, r27
 724:	51 e1       	ldi	r21, 0x11	; 17
 726:	07 c0       	rjmp	.+14     	; 0x736 <__udivmodhi4_ep>

00000728 <__udivmodhi4_loop>:
 728:	aa 1f       	adc	r26, r26
 72a:	bb 1f       	adc	r27, r27
 72c:	a6 17       	cp	r26, r22
 72e:	b7 07       	cpc	r27, r23
 730:	10 f0       	brcs	.+4      	; 0x736 <__udivmodhi4_ep>
 732:	a6 1b       	sub	r26, r22
 734:	b7 0b       	sbc	r27, r23

00000736 <__udivmodhi4_ep>:
 736:	88 1f       	adc	r24, r24
 738:	99 1f       	adc	r25, r25
 73a:	5a 95       	dec	r21
 73c:	a9 f7       	brne	.-22     	; 0x728 <__udivmodhi4_loop>
 73e:	80 95       	com	r24
 740:	90 95       	com	r25
 742:	bc 01       	movw	r22, r24
 744:	cd 01       	movw	r24, r26
 746:	08 95       	ret

00000748 <_exit>:
 748:	f8 94       	cli

0000074a <__stop_program>:
 74a:	ff cf       	rjmp	.-2      	; 0x74a <__stop_program>
